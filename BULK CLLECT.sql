DECLARE
    TYPE EMP_LIST_TYPE IS TABLE OF EMPLOYEES%ROWTYPE;
    EMP_ARRAY_LST EMP_LIST_TYPE;
    CURSOR EMP_CUR_LIST IS SELECT * FROM EMPLOYEES;
    RECORDS_FAILED NUMBER := 0;
BEGIN
    OPEN EMP_CUR_LIST;
    LOOP
        FETCH EMP_CUR_LIST BULK COLLECT INTO EMP_ARRAY_LST LIMIT 10000; -- Process 10,000 rows at a time
        EXIT WHEN EMP_ARRAY_LST.COUNT = 0;

        BEGIN
            FORALL i IN EMP_ARRAY_LST.FIRST..EMP_ARRAY_LST.LAST SAVE EXCEPTIONS
                MERGE INTO EMP_COPY e
                USING (SELECT EMP_ARRAY_LST(i).EMPLOYEE_ID AS EMPLOYEE_ID FROM DUAL) src
                ON (e.EMPLOYEE_ID = src.EMPLOYEE_ID)
                WHEN MATCHED THEN
                    UPDATE SET 
                        e.SALARY = EMP_ARRAY_LST(i).SALARY,
                        e.JOB_ID = EMP_ARRAY_LST(i).JOB_ID
                WHEN NOT MATCHED THEN
                    INSERT (EMPLOYEE_ID, NAME, DEPT, SALARY, JOB_ID)
                    VALUES (EMP_ARRAY_LST(i).EMPLOYEE_ID, EMP_ARRAY_LST(i).NAME, EMP_ARRAY_LST(i).DEPT, EMP_ARRAY_LST(i).SALARY, EMP_ARRAY_LST(i).JOB_ID);
        EXCEPTION
            WHEN OTHERS THEN
                RECORDS_FAILED := SQL%BULK_EXCEPTIONS.COUNT;
                FOR j IN 1..RECORDS_FAILED LOOP
                    DBMS_OUTPUT.PUT_LINE('ERROR RECORD ==> EMPLOYEE_ID: ' || EMP_ARRAY_LST(SQL%BULK_EXCEPTIONS(j).ERROR_INDEX).EMPLOYEE_ID);
                    DBMS_OUTPUT.PUT_LINE('ERROR CODE: ' || SQL%BULK_EXCEPTIONS(j).ERROR_CODE || ', ERROR MESSAGE: ' || SQLERRM(-SQL%BULK_EXCEPTIONS(j).ERROR_CODE));
                END LOOP;
        END;

        COMMIT; -- Commit after each batch
    END LOOP;
    CLOSE EMP_CUR_LIST;
END;
/